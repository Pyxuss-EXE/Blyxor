# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Sep 19 22:05:01 2024
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))